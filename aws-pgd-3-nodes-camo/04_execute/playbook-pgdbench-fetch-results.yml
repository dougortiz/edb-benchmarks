---
- hosts: all
  name: Execute pgd_bench - benchmark
  gather_facts: false
  become: true

  collections:
    - edb_devops.edb_postgres

  tasks:
    - name: Load servers.yml
      ansible.builtin.include_vars:
        file: "{{ terraform_project_path }}/servers.yml"
        name: infra

    - name: Assign value to pg_node
      set_fact:
        pg_node: "{{ node.key }}"
      loop: "{{ infra.servers.machines | dict2items }}"
      loop_control:
        loop_var: node
      when: node.key == 'pgd1'

    - name: Copy the exec-pgdbench-get-tps.sh file
      ansible.builtin.copy:
        src: files/exec-pgdbench-get-tps.sh
        dest: "{{ pgd_bench_home }}/exec-pgdbench-get-tps.sh"
        mode: "0755"

    - name: Execute the pgd_bench_get_tps script
      ansible.builtin.shell: >
        {{ pgd_bench_home }}exec-pgdbench-get-tps.sh
      args:
        executable: /bin/bash
      environment:
        PGD_HOME: "{{ pgd_user_home }}"
      become_user: "{{ pg_owner }}"
      loop: "{{ infra.servers.machines | dict2items }}"
      loop_control:
        loop_var: node
      when: node.key == 'pgd1'
      run_once: true

    - name: Fetch data files
      ansible.builtin.fetch:
        src: "/var/lib/edb/pgd_bench_tps_results.csv"
        dest: "{{ results_directory }}/pgd_bench_tps_results.csv"
        flat: true
      loop: "{{ infra.servers.machines | dict2items }}"
      loop_control:
        loop_var: node
      when: node.key == 'pgd1'
      run_once: true
      become: true
      become_user: "{{ pg_owner }}"